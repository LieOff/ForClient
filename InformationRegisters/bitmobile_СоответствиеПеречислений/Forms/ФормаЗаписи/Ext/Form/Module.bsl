
/////////////////////////////////////////////////////////////////////////////////////////////////
// Общие процедуры и функции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Менеджер					= РегистрыСведений.bitmobile_СоответствиеПеречислений.СоздатьМенеджерЗаписи();
	Менеджер.ИмяВBitmobile		= Запись.ИмяВBitmobile;
	Менеджер.ИмяВКонфигурации	= Запись.ИмяВКонфигурации;
	
	Менеджер.Прочитать();
	
	СтруктураЗначений = Менеджер.СоответствиеЗначенийПеречисления.Получить();
	
	Если СтруктураЗначений = Неопределено Тогда 
		
		// заполнить таблицу значениями
		Для Каждого ЗначениеПеречисления Из Перечисления[СтрЗаменить(СтрЗаменить(Запись.ИмяВКонфигурации, "Перечисление.", ""), "Enum.", "")] Цикл 
			
			Вставка				= СоответствиеЗначенийПеречисления.Добавить();
			Вставка.Значение	= ЗначениеПеречисления;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаЗначения Из СтруктураЗначений Цикл 
			
			Вставка					= СоответствиеЗначенийПеречисления.Добавить();
			Вставка.Значение		= СтрокаЗначения.Ключ;
			Вставка.ИмяВBitmobile	= СтрокаЗначения.Значение;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Запомнить проверяемые данные
	ВременноеИмяВBitmobile = Запись.ИмяВBitmobile;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	bitmobile_СоответствиеПеречислений.ИмяВКонфигурации,
		|	bitmobile_СоответствиеПеречислений.ИмяВBitmobile,
		|	bitmobile_СоответствиеПеречислений.СоответствиеЗначенийПеречисления
		|ИЗ
		|	РегистрСведений.bitmobile_СоответствиеПеречислений КАК bitmobile_СоответствиеПеречислений
		|ГДЕ
		|	bitmobile_СоответствиеПеречислений.ИмяВКонфигурации <> &ИмяВКонфигурации
		|	И bitmobile_СоответствиеПеречислений.ИмяВBitmobile = &ИмяВBitmobile";

	Запрос.УстановитьПараметр("ИмяВКонфигурации", ТекущийОбъект.ИмяВКонфигурации);
	Запрос.УстановитьПараметр("ИмяВBitmobile", ТекущийОбъект.ИмяВBitmobile);

	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда 
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Настройка с таким именем уже существует.";
		Сообщение.Сообщить();
		
		Отказ = Истина;
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СтруктураЗначений = Новый Соответствие;
	
	Для Каждого СтрокаСоответствия Из СоответствиеЗначенийПеречисления Цикл 
		
		СтруктураЗначений.Вставить(СтрокаСоответствия.Значение, СтрокаСоответствия.ИмяВBitmobile);
		
	КонецЦикла;	
	
	Менеджер 					= РегистрыСведений.bitmobile_СоответствиеПеречислений.СоздатьМенеджерЗаписи();
	Менеджер.ИмяВBitmobile 		= Запись.ИмяВBitmobile;
	Менеджер.ИмяВКонфигурации 	= Запись.ИмяВКонфигурации;
	
	Менеджер.Прочитать();
	
	Менеджер.СоответствиеЗначенийПеречисления = Новый ХранилищеЗначения(СтруктураЗначений);
	
	Менеджер.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначенияСервер()
	
	СтруктураЗначений = Новый Соответствие;
	
	Для Каждого СтрокаСоответствия Из СоответствиеЗначенийПеречисления Цикл 
		
		СтруктураЗначений.Вставить(СтрокаСоответствия.Значение, СтрокаСоответствия.ИмяВBitmobile);
		
	КонецЦикла;
	
	СоответствиеЗначенийПеречисления.Очистить();
	
	Для Каждого ЗначениеПеречисления Из Перечисления[СтрЗаменить(СтрЗаменить(Запись.ИмяВКонфигурации, "Перечисление.", ""), "Enum.", "")] Цикл 
			
		Вставка 			= СоответствиеЗначенийПеречисления.Добавить();
		Вставка.Значение 	= ЗначениеПеречисления;
		
		ИмяВBitmobile 		= СтруктураЗначений.Получить(ЗначениеПеречисления);
									
		Если Не ИмяВBitmobile = Неопределено Тогда
			
			Вставка.ИмяВBitmobile = ИмяВBitmobile;
			
		КонецЕсли;	
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоСовпадений(ИмяТаблицы, ИмяРеквизита, ТекущееЗначение, ТекущаяТЧ = Неопределено)
	
	ТаблицаКопия = ЭтаФорма[ИмяТаблицы].Выгрузить();
	
	Если ЗначениеЗаполнено(ТекущаяТЧ) Тогда 
		
		ТаблицаКопия = ТаблицаКопия.Скопировать(Новый Структура("ТабличнаяЧастьОбъектаКонфигурации", ТекущаяТЧ));
		
	КонецЕсли;
		
	Для Каждого Стр Из ТаблицаКопия Цикл 
		
		Стр[ИмяРеквизита] = НРег(Стр[ИмяРеквизита]);
		
	КонецЦикла;	
	
	НайденныеСтроки = ТаблицаКопия.НайтиСтроки(Новый Структура(ИмяРеквизита, ТекущееЗначение));

	Возврат НайденныеСтроки.Количество();
	
КонецФункции

/////////////////////////////////////////////////////////////////////////////////////////////////
// Командный интерфейс

&НаКлиенте
Функция ИмяКорректно(Знач СтрокаПараметр)
	
	СтрокаПараметр = СокрЛП(СтрокаПараметр);	

	КоличествоСимволов = СтрДлина(СтрокаПараметр);
	
	Если КоличествоСимволов > 0 Тогда
		
		Для Сч = 1 По КоличествоСимволов Цикл
			
			Код = КодСимвола(Сред(СтрокаПараметр, Сч));   
			
			Если Код <> 95 И ((Код < 48) Или (Код > 57) И (Код < 65) Или (Код > 90) И (Код < 97) Или (Код > 122))  Тогда    
				
				Возврат Ложь;
				
			КонецЕсли;
				
		КонецЦикла;
		
		Возврат Истина;

	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура ОбновитьЗначения(Команда)
	
	ОбновитьЗначенияСервер();	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяВBitmobileОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяВBitmobile = Элементы.ИмяВBitmobile.ТекстРедактирования;
	
	Если Не ИмяКорректно(ИмяВBitmobile) Тогда 
		
		Запись.ИмяВBitmobile = ВременноеИмяВBitmobile;
		
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ИмяВBitmobileОкончаниеВводаТекстаЗавершение", ЭтаФорма)
							  , "В имени допустимы латинские буквы, цифры и ""_""!"
							  , 0
							  , "Некорректное имя");
		
	Иначе
		
		ВременноеИмяВBitmobile = ИмяВBitmobile;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяВBitmobileОкончаниеВводаТекстаЗавершение(Параметры) Экспорт
	
	ТекущийЭлемент = Элементы.ИмяВBitmobile;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеЗначенийПеречисленияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile = СокрЛП(Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile);
	
	Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile = СтрЗаменить(Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile, " ", "");
	
	Если ЗначениеЗаполнено(Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile) Тогда
		
		Если Не ИмяКорректно(Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile) Тогда 
			
			Отказ = Истина;
			
			ПоказатьПредупреждение( , "В имени допустимы латинские буквы, цифры и ""_""!"
								  , 0
								  , "Некорректное имя");
			
		КонецЕсли;
		
		Если Не Отказ Тогда
		
			КоличествоСовпадений = ПолучитьКоличествоСовпадений("СоответствиеЗначенийПеречисления", "ИмяВBitmobile", НРег(Элементы.СоответствиеЗначенийПеречисления.ТекущиеДанные.ИмяВBitmobile));
			 
			Если КоличествоСовпадений > 1 Тогда 
				
				Отказ = Истина;
				
				ПоказатьПредупреждение( , "Данное имя уже используется!"
								  , 0
								  , "Некорректное имя");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры




