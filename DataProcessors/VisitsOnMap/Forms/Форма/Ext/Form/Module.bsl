
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Заполнить начальное местоположение
	Если НЕ ЗначениеЗаполнено(НачальноеМестоположение) Тогда 
		
		НачальноеМестоположение = "Москва";
		
	КонецЕсли;	
	
	ОтобразитьПустуюКарту(); 
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СтрокаМаркеров = ПолучитьСтрокуМаркеров();	
	ОтобразитьКартуНаВебКлиенте(СтрокаМаркеров, Элементы.OpenDoc.Заголовок, Элементы.Difference.Заголовок);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКарту(Команда)
	
	ОтобразитьПустуюКарту();
	
КонецПроцедуры

&НаКлиенте
Процедура КартаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Команда = ДанныеСобытия.Element.id;
		
	Если Найти(Команда, "Открыть визит") > 0 Тогда
			
		ПозицияСловаДата = Найти(Команда, "Дата");
			
		СтрокаДаты = Прав(Команда, СтрДлина(Команда) - (ПозицияСловаДата + 3));
			
		ПозицияПервогоСловаНомер = Найти(Команда, "Номер");
			
		БезНомерСлева = Прав(Команда, СтрДлина(Команда) - (ПозицияПервогоСловаНомер + 4));
			
		ПозицияВторогоСловаНомер = Найти(БезНомерСлева, "Номер");
			
		СтрокаНомера = Лев(БезНомерСлева, ПозицияВторогоСловаНомер - 1);
			
		Попытка
			ДокVisit = НайтиВизит(СтрокаНомера, СтрокаДаты);
			ПоказатьЗначение( , ДокVisit);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
					
	ИначеЕсли Найти(Команда, "Открыть заказ") > 0 Тогда
			
		ПозицияСловаДата = Найти(Команда, "Дата");
			
		СтрокаДаты = Прав(Команда, СтрДлина(Команда) - (ПозицияСловаДата + 3));
			
		ПозицияПервогоСловаНомер = Найти(Команда, "Номер");
			
		БезНомерСлева = Прав(Команда, СтрДлина(Команда) - (ПозицияПервогоСловаНомер + 4));
			
		ПозицияВторогоСловаНомер = Найти(БезНомерСлева, "Номер");
			
		СтрокаНомера = Лев(БезНомерСлева, ПозицияВторогоСловаНомер - 1);
			
		Попытка
			ДокOrder = НайтиЗаказ(СтрокаНомера, СтрокаДаты);
			ПоказатьЗначение( , ДокOrder);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
			
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрокуМаркеров()
	
	СписокТорговыхТочек          = ПолучитьОтборПоOutlet();
	СписокТорговыхПредставителей = ПолучитьОтборПоSR();
	
	ИспользуетсяСписокТорговыхПредставителей = ?(СписокТорговыхПредставителей.Количество() > 0, Истина, Ложь);
	ИспользуетсяСписокТорговыхТочек          = ?(СписокТорговыхТочек.Количество() > 0, Истина, Ложь);
		
	Если ПоказыватьВизиты И ПоказыватьЗаказы Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Visit.Outlet,
		               |	Visit.SR КАК SR,
		               |	Visit.Lattitude КАК Lattitude,
		               |	Visit.Longitude КАК Longitude,
		               |	Visit.GPSDifference,
		               |	Visit.StartTime КАК Date,
		               |	Visit.Номер КАК Number,
		               |	1 КАК Type,
		               |	Visit.Outlet.Lattitude,
		               |	Visit.Outlet.Longitude
		               |ИЗ
		               |	Документ.Visit КАК Visit
		               |ГДЕ
		               |	Visit.StartTime МЕЖДУ &ДатаНач И &ДатаКон
		               |	И Visit.Outlet В(&Outlet)
		               |	И Visit.SR В(&SR)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ 
		               |	Order.Outlet,
		               |	Order.SR,
		               |	Order.Lattitude,
		               |	Order.Longitude,
		               |	0,
		               |	Order.Дата,
		               |	Order.Номер,
		               |	0,
		               |	Order.Outlet.Lattitude,
		               |	Order.Outlet.Longitude
		               |ИЗ
		               |	Документ.Order КАК Order
		               |ГДЕ
		               |	Order.Дата МЕЖДУ &ДатаНач И &ДатаКон
		               |	И Order.Outlet В(&Outlet)
		               |	И Order.SR В(&SR)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Type,
		               |	SR,
		               |	Date";
	ИначеЕсли ПоказыватьВизиты И НЕ ПоказыватьЗаказы Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Visit.Outlet,
		               |	Visit.SR КАК SR,
		               |	Visit.Lattitude КАК Lattitude,
		               |	Visit.Longitude КАК Longitude,
		               |	Visit.GPSDifference,
		               |	Visit.StartTime КАК Date,
		               |	Visit.Номер КАК Number,
		               |	1 КАК Type,
		               |	Visit.Outlet.Lattitude,
		               |	Visit.Outlet.Longitude
		               |ИЗ
		               |	Документ.Visit КАК Visit
		               |ГДЕ
		               |	Visit.StartTime МЕЖДУ &ДатаНач И &ДатаКон
		               |	И Visit.Outlet В(&Outlet)
		               |	И Visit.SR В(&SR)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	SR,
		               |	Date";
	ИначеЕсли НЕ ПоказыватьВизиты И ПоказыватьЗаказы Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Order.Outlet,
		               |	Order.SR КАК SR,
		               |	Order.Lattitude КАК Lattitude,
		               |	Order.Longitude КАК Longitude,
		               |	0 КАК GPSDifference,
		               |	Order.Дата КАК Date,
		               |	Order.Номер КАК Number,
		               |	0 КАК Type,
		               |	Order.Outlet.Lattitude,
		               |	Order.Outlet.Longitude
		               |ИЗ
		               |	Документ.Order КАК Order
		               |ГДЕ
		               |	Order.Дата МЕЖДУ &ДатаНач И &ДатаКон
		               |	И Order.Outlet В(&Outlet)
		               |	И Order.SR В(&SR)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	SR,
		               |	Date";
	КонецЕсли;
	
	Если Запрос<>Неопределено Тогда	
		
		Если ИспользуетсяСписокТорговыхТочек Тогда
			Запрос.УстановитьПараметр("Outlet", СписокТорговыхТочек);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Visit.Outlet В(&Outlet)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Order.Outlet В(&Outlet)", "");
		КонецЕсли;
		
		Если ИспользуетсяСписокТорговыхПредставителей Тогда
			Запрос.УстановитьПараметр("SR", СписокТорговыхПредставителей);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Visit.SR В(&SR)", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Order.SR В(&SR)", "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Период.ДатаОкончания) Тогда
			Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Период.ДатаОкончания));
		Иначе 
			Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Объект.Период.ДатаНачала) Тогда
			Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Период.ДатаНачала));
		Иначе 
			Запрос.УстановитьПараметр("ДатаНач", Дата(1,1,1));
		КонецЕсли;	
										          
		Выборка = Запрос.Выполнить().Выбрать();
			
		СтрокаМаркеров = "";
		
		Пока Выборка.Следующий() Цикл
			
			КомандаКнопки = "Открыть визит " + "Номер" + Строка(Выборка.Number) + "Номер Дата" + Строка(Выборка.Date);  
			
			Если Выборка.GPSDifference > 50 Тогда 
				ИмяКартинки = "places-unvisited.png";
			Иначе 
				ИмяКартинки = "places-visited.png";
			КонецЕсли;	
				
			КодЦветаЛинии = ПолучитьКодЦвета(Выборка.SR);
			
			ТипДок = "визита";
			
			Если Выборка.Type = 0 Тогда
				КомандаКнопки = "Открыть заказ " + "Номер" + Строка(Выборка.Number) + "Номер Дата" + Строка(Выборка.Date);
				ИмяКартинки = "supermarket.png";
				ТипДок = "заказа";
			КонецЕсли;
			
			ЕстьПолилинии = "False";
			
			Если ПоказыватьМаршруты Тогда
				ЕстьПолилинии = "True";
			КонецЕсли;
									
			Если ЗначениеЗаполнено(Выборка.Lattitude) И ЗначениеЗаполнено(Выборка.Longitude) Тогда
				                      
				СтрокаМаркеров = СтрокаМаркеров 
								   + StrReplace(Выборка.SR.Наименование,"'","\'") + "-=-"
								   + СтрЗаменить(Строка(Выборка.Lattitude), ",", ".") + "-=-"
								   + СтрЗаменить(Строка(Выборка.Longitude), ",", ".") + "-=-"
								   + "False-=-"
								   + StrReplace(Выборка.Outlet.Наименование,"'","\'") + "-=-"
								   + Выборка.Date + "-=-"
								   + Выборка.Number + "-=-" 
								   + КомандаКнопки + "-=-" 
								   + ИмяКартинки + "-=-" 
								   + Выборка.GPSDifference + "-=-" 
								   + "0-=-" 
								   + "0-=-"
								   + ЕстьПолилинии + "-=-"
								   + КодЦветаЛинии + "/////";
				
			ИначеЕсли (ЗначениеЗаполнено(Выборка.OutletLattitude) И ЗначениеЗаполнено(Выборка.OutletLongitude))
			     И НЕ (ЗначениеЗаполнено(Выборка.Lattitude) И ЗначениеЗаполнено(Выборка.Longitude)) Тогда 
				
				СтрокаМаркеров = СтрокаМаркеров 
								   + StrReplace(Выборка.SR.Наименование,"'","\'") + "-=-"
								   + СтрЗаменить(Строка(Выборка.Lattitude), ",", ".") + "-=-"
								   + СтрЗаменить(Строка(Выборка.Longitude), ",", ".") + "-=-"
                                   + "True-=-"
								   + StrReplace(Выборка.Outlet.Наименование,"'","\'") + "-=-"
								   + Выборка.Date + "-=-"
								   + Выборка.Number + "-=-" 
								   + КомандаКнопки + "-=-" 
								   + ИмяКартинки + "-=-" 
								   + Выборка.GPSDifference + "-=-" 
								   + СтрЗаменить(Строка(Выборка.OutletLattitude), ",", ".") + "-=-" 
								   + СтрЗаменить(Строка(Выборка.OutletLongitude), ",", ".") + "-=-"
								   + ЕстьПолилинии + "-=-"
								   + КодЦветаЛинии + "/////";
								   
				Сообщить("Возможна ошибка: Для " + ТипДок + " №" + Строка(Выборка.Number) + " от " + Строка(Выборка.Date) + " не указаны координаты документа. Будут использованы координаты торговой точки.", СтатусСообщения.Информация); 				   
				
			Иначе
				
				Сообщить("Ошибка: Для " + ТипДок + " №" + Строка(Выборка.Number) + " от " + Строка(Выборка.Date) + " не указаны координаты документа и торговой точки. Документ не будет отображен на карте.", СтатусСообщения.Важное);
				
			КонецЕсли;
									
		КонецЦикла;
		
		Возврат СтрокаМаркеров;
		
	Иначе 
		
		Возврат Неопределено;
		
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ОтобразитьПустуюКарту()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
	
	ТаблицаТочек = ОбработкаОбъект.СоздатьТаблицуДляПередачиКоординат();
	If НачальноеМестоположение = "" Тогда
		НачальноеМестоположение = Constants.DefaultCity.Get();
		If НачальноеМестоположение = "" Then 
			НачальноеМестоположение = "Москва";
		EndIF
	EndIf;
   	Карта = ОбработкаОбъект.ПолучитьКартуGoogle(ТаблицаТочек, , НачальноеМестоположение);
	
КонецПроцедуры

&НаСервере
Функция ОтобразитьКартуНаВебКлиенте(СтрокаМаркеров, ЗаголовокOpenDoc, ЗаголовокDiff)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект"); 
	
	ТаблицаТочек = ОбработкаОбъект.СоздатьТаблицуДляПередачиКоординат();
	
	If НачальноеМестоположение = "" Тогда
		НачальноеМестоположение = Constants.DefaultCity.Get();
		If НачальноеМестоположение = "" Then 
			НачальноеМестоположение = "Москва";
		EndIF
	EndIf;

	СтрокаМаркеров = StrReplace(СтрокаМаркеров,Символы.ПС,"");
	
   	ТекстHTML = ОбработкаОбъект.ПолучитьКартуGoogle(ТаблицаТочек, , НачальноеМестоположение);
	
	ТекстHTML = СтрЗаменить(ТекстHTML, "function showMarkers(ArrayInString, BtnLabel, Diff) {", "function showMarkers() {");
	
    ТекстHTML = СтрЗаменить(ТекстHTML, "////////////////// вызов показа маркеров в веб-клиенте", "showMarkers();");
	
	ТекстHTML = СтрЗаменить(ТекстHTML, "////////////////// объявление глобальных переменных для веб-клиента", "var ArrayInString = '" + СтрокаМаркеров + "';" + Символы.ПС + "var BtnLabel = '" + ЗаголовокOpenDoc + "';" + Символы.ПС + "var Diff ='" + ЗаголовокDiff + "';");
							
    Карта = ТекстHTML;
	
КонецФункции

&НаСервере
Функция НайтиВизит(СтрокаНомера, СтрокаДаты)
	
	Возврат Документы.Visit.НайтиПоНомеру(СтрокаНомера, Дата(СтрокаДаты));
	
КонецФункции

&НаСервере
Функция НайтиЗаказ(СтрокаНомера, СтрокаДаты)
	
	Возврат Документы.Order.НайтиПоНомеру(СтрокаНомера, Дата(СтрокаДаты));
	
КонецФункции

&НаСервере
Функция ПолучитьОтборПоSR()
	
	ТЗОтбора = SRs.Выгрузить();
	
	ТЗОтбора.Свернуть("SR");
	
	МассивУдаляемых = Новый Массив;
	
	Для Каждого СтрокаТЗ ИЗ ТЗОтбора Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.SR) Тогда 
			
			МассивУдаляемых.Добавить(СтрокаТЗ);
			
		КонецЕсли;
				
	КонецЦикла;
	
	Для Каждого СтрокаМассива ИЗ МассивУдаляемых Цикл
		
		ТЗОтбора.Удалить(СтрокаМассива);
		
	КонецЦикла;
		
	Возврат ТЗОтбора;
			
КонецФункции

&НаСервере
Функция ПолучитьОтборПоOutlet()
	
	ТЗОтбора = Outlets.Выгрузить();
	
	ТЗОтбора.Свернуть("Outlet");
	
	МассивУдаляемых = Новый Массив;
	
	Для Каждого СтрокаТЗ ИЗ ТЗОтбора Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.Outlet) Тогда 
			
			МассивУдаляемых.Добавить(СтрокаТЗ);
			
		КонецЕсли;
				
	КонецЦикла;
	
	Для Каждого СтрокаМассива ИЗ МассивУдаляемых Цикл
		
		ТЗОтбора.Удалить(СтрокаМассива);
		
	КонецЦикла;
		
	Возврат ТЗОтбора;
			
КонецФункции

&НаСервере
Функция ПолучитьКодЦвета(ВыбранныйSR)
	
	ПолученныйЦвет = "";
	
	Для Каждого СтрокаОтбора ИЗ SRs Цикл
		
		Если СтрокаОтбора.SR = ВыбранныйSR Тогда
			
			ПолученныйЦвет = СтрокаОтбора.Color;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Если НЕ ПолученныйЦвет = "" Тогда
		
		Если ПолученныйЦвет = "Черный" Тогда
			
			Возврат "RGB(0,0,0)";
			
		ИначеЕсли ПолученныйЦвет = "Красный" Тогда
			
			Возврат "RGB(255,0,0)";
			
		ИначеЕсли ПолученныйЦвет = "Синий" Тогда
			
			Возврат "RGB(70,130,180)";
			
		ИначеЕсли ПолученныйЦвет = "Зеленый" Тогда
			
			Возврат "RGB(0,128,0)";
			
		ИначеЕсли ПолученныйЦвет = "Фиолетовый" Тогда
			
			Возврат "RGB(128,130,238)";
			
		ИначеЕсли ПолученныйЦвет = "Серый" Тогда
			
			Возврат "RGB(128,128,128)";
			
		ИначеЕсли ПолученныйЦвет = "Голубой" Тогда
			
			Возврат "RGB(0,191,255)";
			
		ИначеЕсли ПолученныйЦвет = "Циан" Тогда
			
			Возврат "RGB(0,139,139)";
			
		КонецЕсли;	
			
	Иначе
		
		Возврат "RGB(70,130,180)";
		
	КонецЕсли;
	
КонецФункции

